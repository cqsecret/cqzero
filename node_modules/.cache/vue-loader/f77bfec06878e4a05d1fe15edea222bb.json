{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\xm\\spottmall\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\xm\\spottmall\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\xm\\spottmall\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\xm\\spottmall\\src\\views\\products\\Detail.vue?vue&type=template&id=f45a235c&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\xm\\spottmall\\src\\views\\products\\Detail.vue","mtime":1599551771285},{"path":"C:\\Users\\Administrator\\Desktop\\xm\\spottmall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\xm\\spottmall\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\xm\\spottmall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\xm\\spottmall\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}